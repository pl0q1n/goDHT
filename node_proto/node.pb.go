// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node_proto/node.proto

/*
Package node_proto is a generated protocol buffer package.

It is generated from these files:
	node_proto/node.proto

It has these top-level messages:
	JoinRequest
	JoinResponse
	FingerTable
	FingerTableRequest
*/
package node_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JoinResponse_Status int32

const (
	JoinResponse_Success   JoinResponse_Status = 0
	JoinResponse_Failure   JoinResponse_Status = 101
	JoinResponse_WrongNode JoinResponse_Status = 102
)

var JoinResponse_Status_name = map[int32]string{
	0:   "Success",
	101: "Failure",
	102: "WrongNode",
}
var JoinResponse_Status_value = map[string]int32{
	"Success":   0,
	"Failure":   101,
	"WrongNode": 102,
}

func (x JoinResponse_Status) String() string {
	return proto.EnumName(JoinResponse_Status_name, int32(x))
}
func (JoinResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// Add Status to messages
type JoinRequest struct {
	Id   uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
}

func (m *JoinRequest) Reset()                    { *m = JoinRequest{} }
func (m *JoinRequest) String() string            { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()               {}
func (*JoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *JoinRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JoinRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type JoinResponse struct {
	FingerTable *FingerTable        `protobuf:"bytes,1,opt,name=fingerTable" json:"fingerTable,omitempty"`
	InitStorage map[uint64][]byte   `protobuf:"bytes,2,rep,name=initStorage" json:"initStorage,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status      JoinResponse_Status `protobuf:"varint,3,opt,name=status,enum=node_proto.JoinResponse_Status" json:"status,omitempty"`
}

func (m *JoinResponse) Reset()                    { *m = JoinResponse{} }
func (m *JoinResponse) String() string            { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()               {}
func (*JoinResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JoinResponse) GetFingerTable() *FingerTable {
	if m != nil {
		return m.FingerTable
	}
	return nil
}

func (m *JoinResponse) GetInitStorage() map[uint64][]byte {
	if m != nil {
		return m.InitStorage
	}
	return nil
}

func (m *JoinResponse) GetStatus() JoinResponse_Status {
	if m != nil {
		return m.Status
	}
	return JoinResponse_Success
}

type FingerTable struct {
	Entry     []*FingerTable_Entry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
	Previous  *FingerTable_Entry   `protobuf:"bytes,2,opt,name=previous" json:"previous,omitempty"`
	SelfEntry *FingerTable_Entry   `protobuf:"bytes,3,opt,name=selfEntry" json:"selfEntry,omitempty"`
}

func (m *FingerTable) Reset()                    { *m = FingerTable{} }
func (m *FingerTable) String() string            { return proto.CompactTextString(m) }
func (*FingerTable) ProtoMessage()               {}
func (*FingerTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FingerTable) GetEntry() []*FingerTable_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *FingerTable) GetPrevious() *FingerTable_Entry {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *FingerTable) GetSelfEntry() *FingerTable_Entry {
	if m != nil {
		return m.SelfEntry
	}
	return nil
}

type FingerTable_Entry struct {
	Hash uint64 `protobuf:"varint,1,opt,name=hash" json:"hash,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
}

func (m *FingerTable_Entry) Reset()                    { *m = FingerTable_Entry{} }
func (m *FingerTable_Entry) String() string            { return proto.CompactTextString(m) }
func (*FingerTable_Entry) ProtoMessage()               {}
func (*FingerTable_Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *FingerTable_Entry) GetHash() uint64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *FingerTable_Entry) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type FingerTableRequest struct {
}

func (m *FingerTableRequest) Reset()                    { *m = FingerTableRequest{} }
func (m *FingerTableRequest) String() string            { return proto.CompactTextString(m) }
func (*FingerTableRequest) ProtoMessage()               {}
func (*FingerTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*JoinRequest)(nil), "node_proto.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "node_proto.JoinResponse")
	proto.RegisterType((*FingerTable)(nil), "node_proto.FingerTable")
	proto.RegisterType((*FingerTable_Entry)(nil), "node_proto.FingerTable.Entry")
	proto.RegisterType((*FingerTableRequest)(nil), "node_proto.FingerTableRequest")
	proto.RegisterEnum("node_proto.JoinResponse_Status", JoinResponse_Status_name, JoinResponse_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Node service

type NodeClient interface {
	ProcessJoin(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	ProcessFingerTable(ctx context.Context, in *FingerTableRequest, opts ...grpc.CallOption) (*FingerTable, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) ProcessJoin(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := grpc.Invoke(ctx, "/node_proto.Node/ProcessJoin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ProcessFingerTable(ctx context.Context, in *FingerTableRequest, opts ...grpc.CallOption) (*FingerTable, error) {
	out := new(FingerTable)
	err := grpc.Invoke(ctx, "/node_proto.Node/ProcessFingerTable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Node service

type NodeServer interface {
	ProcessJoin(context.Context, *JoinRequest) (*JoinResponse, error)
	ProcessFingerTable(context.Context, *FingerTableRequest) (*FingerTable, error)
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_ProcessJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ProcessJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node_proto.Node/ProcessJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ProcessJoin(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ProcessFingerTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FingerTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ProcessFingerTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node_proto.Node/ProcessFingerTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ProcessFingerTable(ctx, req.(*FingerTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "node_proto.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessJoin",
			Handler:    _Node_ProcessJoin_Handler,
		},
		{
			MethodName: "ProcessFingerTable",
			Handler:    _Node_ProcessFingerTable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node_proto/node.proto",
}

func init() { proto.RegisterFile("node_proto/node.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x3b, 0xe9, 0x1f, 0xed, 0x99, 0x75, 0x09, 0x87, 0x95, 0x0d, 0x05, 0x35, 0xe4, 0x2a,
	0xde, 0x64, 0xd9, 0xec, 0x85, 0xae, 0x82, 0x17, 0x82, 0x0b, 0x2a, 0xa8, 0xa4, 0x82, 0x97, 0x92,
	0x36, 0xa7, 0xed, 0x60, 0xc8, 0xd4, 0x99, 0x49, 0xa1, 0xcf, 0xe2, 0xdb, 0xf8, 0x3a, 0xbe, 0x84,
	0xcc, 0x24, 0x98, 0xa0, 0x86, 0xde, 0x9d, 0x39, 0xfd, 0xbe, 0x73, 0x9a, 0xdf, 0xf9, 0xe0, 0x61,
	0x25, 0x0b, 0xfa, 0xba, 0x57, 0xd2, 0xc8, 0x2b, 0x5b, 0x26, 0xae, 0x44, 0xe8, 0xda, 0xd1, 0x35,
	0xf0, 0x77, 0x52, 0x54, 0x19, 0x7d, 0xaf, 0x49, 0x1b, 0x3c, 0x07, 0x4f, 0x14, 0x01, 0x0b, 0x59,
	0x3c, 0xc9, 0x3c, 0x51, 0x20, 0xc2, 0x64, 0x27, 0xb5, 0x09, 0xbc, 0x90, 0xc5, 0xf3, 0xcc, 0xd5,
	0xd1, 0x4f, 0x0f, 0xce, 0x1a, 0x8f, 0xde, 0xcb, 0x4a, 0x13, 0xde, 0x02, 0xdf, 0x88, 0x6a, 0x4b,
	0xea, 0x73, 0xbe, 0x2a, 0xc9, 0xb9, 0x79, 0x7a, 0x99, 0x74, 0x5b, 0x92, 0xbb, 0xee, 0xe7, 0xac,
	0xaf, 0xc5, 0xf7, 0xc0, 0x45, 0x25, 0xcc, 0xd2, 0x48, 0x95, 0x6f, 0x29, 0xf0, 0xc2, 0x71, 0xcc,
	0xd3, 0xa7, 0x7d, 0x6b, 0x7f, 0x53, 0xf2, 0xb6, 0xd3, 0xbe, 0xa9, 0x8c, 0x3a, 0x66, 0x7d, 0x37,
	0x3e, 0x83, 0x99, 0x36, 0xb9, 0xa9, 0x75, 0x30, 0x0e, 0x59, 0x7c, 0x9e, 0x3e, 0x19, 0x9c, 0xb3,
	0x74, 0xb2, 0xac, 0x95, 0x2f, 0x5e, 0x81, 0xff, 0xf7, 0x64, 0xf4, 0x61, 0xfc, 0x8d, 0x8e, 0x2d,
	0x0a, 0x5b, 0xe2, 0x05, 0x4c, 0x0f, 0x79, 0x59, 0x93, 0x83, 0x71, 0x96, 0x35, 0x8f, 0x17, 0xde,
	0x73, 0x16, 0x5d, 0xc3, 0xac, 0x99, 0x88, 0x1c, 0xee, 0x2d, 0xeb, 0xf5, 0x9a, 0xb4, 0xf6, 0x47,
	0xf6, 0x71, 0x97, 0x8b, 0xb2, 0x56, 0xe4, 0x13, 0x3e, 0x80, 0xf9, 0x17, 0x25, 0xab, 0xed, 0x07,
	0x59, 0x90, 0xbf, 0x89, 0x7e, 0x31, 0xe0, 0x3d, 0x2a, 0x78, 0x03, 0x53, 0xb2, 0x7b, 0x03, 0xe6,
	0x10, 0x3c, 0x1a, 0xa0, 0x97, 0x34, 0x9f, 0xdd, 0x68, 0xf1, 0x16, 0xee, 0xef, 0x15, 0x1d, 0x84,
	0xac, 0xb5, 0xfb, 0x53, 0x27, 0x7d, 0x7f, 0xe4, 0xf8, 0x12, 0xe6, 0x9a, 0xca, 0x8d, 0x6b, 0x3b,
	0x5c, 0x27, 0xbd, 0x9d, 0x7e, 0x71, 0x05, 0xd3, 0x06, 0x92, 0x8d, 0x47, 0xae, 0x77, 0x2d, 0x25,
	0x57, 0xff, 0x37, 0x32, 0x17, 0x80, 0xfd, 0x08, 0x34, 0x61, 0x4b, 0x7f, 0x30, 0x98, 0x58, 0x1c,
	0xf8, 0x1a, 0xf8, 0x27, 0x25, 0x2d, 0x35, 0x7b, 0x25, 0xbc, 0xfc, 0xf7, 0x6e, 0xce, 0xb0, 0x08,
	0x86, 0x0e, 0x1a, 0x8d, 0xf0, 0x23, 0x60, 0x3b, 0xa3, 0x8f, 0xf5, 0xf1, 0x50, 0x0a, 0xdb, 0x89,
	0x43, 0x29, 0x8d, 0x46, 0xab, 0x99, 0x6b, 0xde, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x3b,
	0x0b, 0x4d, 0x45, 0x03, 0x00, 0x00,
}
